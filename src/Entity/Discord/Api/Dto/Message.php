<?php

declare(strict_types=1);

namespace App\Entity\Discord\Api\Dto;

use App\Entity\Discord\Api\Enumeration\MessageType;

/**
 * @see https://discord.com/developers/docs/resources/message#message-object-message-structure
 */
class Message
{
    /**
     * Deprecated in favor of interaction_metadata; sent if the message is a response to an interaction.
     * @var MessageInteraction|null
     * @deprecated
     */
    public ?MessageInteraction $interaction;

    /**
     * Deprecated: the stickers sent with the message.
     * @var Sticker[]|null
     * @deprecated
     */
    public ?array $stickers;

    /**
     * @param string $id ID of the message.
     * @param string $channel_id ID of the channel the message was sent in.
     * @param User $author The author of this message (not guaranteed to be a valid user).
     * @param string $content Contents of the message.
     * @param string $timestamp When this message was sent.
     * @param string|null $edited_timestamp When this message was edited (or null if never).
     * @param bool $tts Whether this was a TTS message.
     * @param bool $mention_everyone Whether this message mentions everyone.
     * @param User[] $mentions Users specifically mentioned in the message.
     * @param string[] $mention_roles Roles specifically mentioned in this message.
     * @param Attachment[] $attachments Any attached files.
     * @param Embed[] $embeds Any embedded content.
     * @param bool $pinned Whether this message is pinned.
     * @param MessageType $type Type of message.
     * @param ChannelMention[]|null $mention_channels Channels specifically mentioned in this message.
     * @param Reaction[]|null $reactions Reactions to the message.
     * @param int|string|null $nonce Used for validating a message was sent.
     * @param string|null $webhook_id If the message is generated by a webhook, this is the webhook's id.
     * @param MessageActivity|null $activity Sent with Rich Presence-related chat embeds.
     * @param Application|null $application Sent with Rich Presence-related chat embeds.
     * @param string|null $application_id If the message is an Interaction or application-owned webhook, this is the id
     * of the application.
     * @param int|null $flags Message flags combined as a bitfield.
     * @param MessageReference|null $message_reference Data showing the source of a crosspost, channel
     * follow add, pin, or reply message.
     * @param MessageSnapshot[]|null $message_snapshots The message associated with the message_reference.
     * This is a minimal subset of fields in a message (e.g. author is excluded.).
     * @param Message|null $referenced_message The message associated with the message_reference.
     * @param MessageInteractionMetadata|null $interaction_metadata In preview. Sent if the message is sent as a result
     * of an interaction.
     * @param MessageInteraction|null $interaction Deprecated in favor of interaction_metadata; sent if the message is a
     * response to an interaction.
     * @param Channel|null $thread The thread that was started from this message, includes thread member object.
     * @param AbstractComponent[]|null $components Sent if the message contains components like buttons, action rows, or
     * other interactive components.
     * @param StickerItem[]|null $sticker_items Sent if the message contains stickers.
     * @param Sticker[]|null $stickers Deprecated the stickers sent with the message.
     * @param int|null $position A generally increasing integer (there may be gaps or duplicates) that represents the
     * approximate position of the message in a thread, it can be used to estimate the relative position of the message
     * in a thread in company with total_message_sent on parent thread.
     * @param RoleSubscriptionData|null $role_subscription_data Data of the role subscription purchase or renewal that
     * prompted this ROLE_SUBSCRIPTION_PURCHASE message.
     * @param ResolvedData|null $resolved Data for users, members, channels, and roles in the message's auto-populated
     * select menus.
     * @param Poll|null $poll A poll!
     * @param MessageCall|null $call The call associated with the message.
     */
    public function __construct(
        public string                      $id,
        public string                      $channel_id,
        public User                        $author,
        public string                      $content,
        public string                      $timestamp,
        public ?string                     $edited_timestamp,
        public bool                        $tts,
        public bool                        $mention_everyone,
        public array                       $mentions,
        public array                       $mention_roles,
        public array                       $attachments,
        public array                       $embeds,
        public bool                        $pinned,
        public MessageType                 $type,
        public ?array                      $mention_channels = null,
        public ?array                      $reactions = null,
        public int|string|null             $nonce = null,
        public ?string                     $webhook_id = null,
        public ?MessageActivity            $activity = null,
        public ?Application                $application = null,
        public ?string                     $application_id = null,
        public ?int                        $flags = null,
        public ?MessageReference           $message_reference = null,
        public ?array                      $message_snapshots = null,
        public ?Message                    $referenced_message = null,
        public ?MessageInteractionMetadata $interaction_metadata = null,
        ?MessageInteraction                $interaction = null,
        public ?Channel                    $thread = null,
        public ?array                      $components = null,
        public ?array                      $sticker_items = null,
        ?array                             $stickers = null,
        public ?int                        $position = null,
        public ?RoleSubscriptionData       $role_subscription_data = null,
        public ?ResolvedData               $resolved = null,
        public ?Poll                       $poll = null,
        public ?MessageCall                $call = null
    )
    {
        $this->interaction = $interaction;
        $this->stickers = $stickers;
    }
}
